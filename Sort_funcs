CREATE OR REPLACE FUNCTION SortCategory(Cat varchar) RETURNS TABLE (
	ItemId int,
	SaleId int,
	Priority int,
	Discount int,
	DiscType int,
	Price int) 
	AS $$
	select ItemId, SaleId, Priority, Discount, DiscType, ItemInSale.Price
	from ItemInSale 
	join Item on (Item.id = ItemInSale.ItemId)
	join Category on (Category.id = Item.CategoryId)
	where category.name =Cat;
	$$ LANGUAGE SQL;
  
  
  
  CREATE OR REPLACE FUNCTION SortDate() RETURNS TABLE(
	ItemId int,
	SaleId int,
	Priority int,
	Discount int,
	DiscType int,
	Price int) 
	AS $$
	select ItemId, SaleId, Priority, Discount, DiscType, ItemInSale.Price 
	from ItemInSale
	join Sale on (Sale.id = ItemInSale.SaleId)
	where DATE_PART('day', EndTime - current_date) < 5;
	$$ LANGUAGE SQL;
  
  
  CREATE OR REPLACE FUNCTION SortDiff() RETURNS TABLE(
	ItemId int,
	SaleId int,
	Priority int,
	Discount int,
	DiscType int,
	Price int,
	SaleValue int) 
	AS $$
	select ItemId, SaleId, Priority, Discount, DiscType, ItemInSale.Price, (Item.price - ItemInSale.price) as SaleValue
	from ItemInSale
	join Item on (Item.Id = ItemInSale.ItemId)
	group by ItemInSale.ItemId, ItemInSale.SaleId, Priority, Discount, DiscType, ItemInSale.Price, Item.price
	order by Max(Item.price - ItemInSale.price) desc;
$$ LANGUAGE SQL;
